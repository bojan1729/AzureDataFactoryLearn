{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "bajlecadf"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/ds_bajlecblob_tgt_circuits')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "Inputblob",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"p_window_end_date": {
						"type": "string"
					}
				},
				"folder": {
					"name": "tumblingwindow"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": {
							"value": "@formatDateTime(dataset().p_window_end_date, 'yyyy-MM-dd')",
							"type": "Expression"
						},
						"container": "tumblingwindow"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Big File To SQL Table')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink"
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "GroupCode",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "GroupCode",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "CorporateCode",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "CorporateCode",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "AccountNo",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "AccountNo",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "AgreementNo",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "AgreementNo",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "SubscriptionNumber",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "SubscriptionNumber",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "CostCentre",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "CostCentre",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "NetworkSerialNumber",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "NetworkSerialNumber",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Tariff",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Tariff",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Callclass",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "CallClass",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "CallclassDescription",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "CallClassDescription",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "CallLandingdate",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "CallLandingDate",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Calldate",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Calldate",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Calltime",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Calltime",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "BundledCall",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "BundledCall",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "SPBilledCallPrice",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "SPBilledCallPrice",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Service",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Service",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "PreBundleActualDuration",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "PreBundleActualDuration",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "PreBundledSPValue",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "PreBundledSPValue",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "SPRetailCallPrice",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "SPRetailCallPrice",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "DiscountValue",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "DiscountValue",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "SCDCountryofCallOrigin",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "SCDCountryOfCallOrigin",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "SCDCallDirection",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "SCDCallDirection",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "SCDNetworksCallIndicator",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "SCDNetworksCallIndicator",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "GPRSDestination",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "GPRSDestination",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "GPRSProductCode",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "GPRSProductCode",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "UplinkVolume",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "UplinkVolume",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "DownlinkVolume",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "DownlinkVolume",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "NumberofContexts",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "NumberOfContexts",
											"type": "String",
											"physicalType": "varchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_InputCSV",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_OutputSQL",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "zmy03_bigfile"
				},
				"annotations": [],
				"lastPublishTime": "2020-10-06T20:39:17Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Blob To SQL')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Cars CSV to SQL",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink"
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "Make",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Make",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Model",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Model",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Type",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Type",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "DriveTrain",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "DriveTrain",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Length",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Length",
											"type": "Decimal",
											"physicalType": "decimal"
										}
									},
									{
										"source": {
											"name": "Origin",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Origin",
											"physicalType": "nvarchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "CarsCSV",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "CarsTable",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "zmy00_Misc"
				},
				"annotations": [],
				"lastPublishTime": "2020-09-24T17:35:21Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PIP_BlobToStaging')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "GetFilesToLoad",
						"type": "GetMetadata",
						"dependsOn": [
							{
								"activity": "TruncateStaging",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "DS_Blob",
								"type": "DatasetReference",
								"parameters": {}
							},
							"fieldList": [
								"childItems"
							],
							"storeSettings": {
								"type": "AzureBlobStorageReadSettings",
								"recursive": true
							},
							"formatSettings": {
								"type": "DelimitedTextReadSettings"
							}
						}
					},
					{
						"name": "ForEachFile",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "GetFilesToLoad",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('GetFilesToLoad').output.childItems",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "GetTableToLoad",
									"type": "Lookup",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "AzureSqlSource",
											"sqlReaderStoredProcedureName": "[[staging].[usp_GetTableToLoad]",
											"storedProcedureParameters": {
												"SourceFileName": {
													"type": "String",
													"value": {
														"value": "@{item().name}",
														"type": "Expression"
													}
												}
											},
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"dataset": {
											"referenceName": "DS_Db_Static",
											"type": "DatasetReference",
											"parameters": {}
										}
									}
								},
								{
									"name": "LoadStaging",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "GetTableToLoad",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "DelimitedTextSource",
											"storeSettings": {
												"type": "AzureBlobStorageReadSettings",
												"recursive": true,
												"wildcardFileName": {
													"value": "@{item().name}",
													"type": "Expression"
												}
											},
											"formatSettings": {
												"type": "DelimitedTextReadSettings"
											}
										},
										"sink": {
											"type": "AzureSqlSink"
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "DS_Blob",
											"type": "DatasetReference",
											"parameters": {}
										}
									],
									"outputs": [
										{
											"referenceName": "DS_Db_Dynamic",
											"type": "DatasetReference",
											"parameters": {
												"SchemaName": {
													"value": "@{activity('GetTableToLoad').output.firstRow.StagingSchemaName}",
													"type": "Expression"
												},
												"TableName": {
													"value": "@{activity('GetTableToLoad').output.firstRow.StagingTableName}",
													"type": "Expression"
												}
											}
										}
									]
								}
							]
						}
					},
					{
						"name": "TruncateStaging",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[staging].[usp_TruncateStaging]"
						},
						"linkedServiceName": {
							"referenceName": "lnk_sqldatabase",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "bidesign"
				},
				"annotations": [],
				"lastPublishTime": "2020-09-22T14:36:09Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PIP_BlobToStagingToFinal')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "GetFilesToLoad",
						"type": "GetMetadata",
						"dependsOn": [
							{
								"activity": "TruncateStaging",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "DS_Blob",
								"type": "DatasetReference",
								"parameters": {}
							},
							"fieldList": [
								"childItems"
							],
							"storeSettings": {
								"type": "AzureBlobStorageReadSettings",
								"recursive": true
							},
							"formatSettings": {
								"type": "DelimitedTextReadSettings"
							}
						}
					},
					{
						"name": "ForEachFile",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "GetFilesToLoad",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('GetFilesToLoad').output.childItems",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "GetTableToLoad",
									"type": "Lookup",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "AzureSqlSource",
											"sqlReaderStoredProcedureName": "[[staging].[usp_GetTableToLoad]",
											"storedProcedureParameters": {
												"SourceFileName": {
													"type": "String",
													"value": {
														"value": "@{item().name}",
														"type": "Expression"
													}
												}
											},
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"dataset": {
											"referenceName": "DS_Db_Static",
											"type": "DatasetReference",
											"parameters": {}
										}
									}
								},
								{
									"name": "LoadStaging",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "GetTableToLoad",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "DelimitedTextSource",
											"storeSettings": {
												"type": "AzureBlobStorageReadSettings",
												"recursive": true,
												"wildcardFileName": {
													"value": "@{item().name}",
													"type": "Expression"
												}
											},
											"formatSettings": {
												"type": "DelimitedTextReadSettings"
											}
										},
										"sink": {
											"type": "AzureSqlSink"
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "DS_Blob",
											"type": "DatasetReference",
											"parameters": {}
										}
									],
									"outputs": [
										{
											"referenceName": "DS_Db_Dynamic",
											"type": "DatasetReference",
											"parameters": {
												"SchemaName": {
													"value": "@{activity('GetTableToLoad').output.firstRow.StagingSchemaName}",
													"type": "Expression"
												},
												"TableName": {
													"value": "@{activity('GetTableToLoad').output.firstRow.StagingTableName}",
													"type": "Expression"
												}
											}
										}
									]
								}
							]
						}
					},
					{
						"name": "TruncateStaging",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[staging].[usp_TruncateStaging]"
						},
						"linkedServiceName": {
							"referenceName": "lnk_sqldatabase",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "StagingToFinal",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "ForEachFile",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PIP_StagingToFinal",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "bidesign"
				},
				"annotations": [],
				"lastPublishTime": "2020-09-23T08:54:10Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PIP_DynamicQuery')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Set variable",
						"type": "SetVariable",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"variableName": "HighWaterMark",
							"value": {
								"value": "SELECT * FROM source.CustomerRegistrations WHERE registration_date > '@{adddays(utcnow(), -180)}'",
								"type": "Expression"
							}
						}
					},
					{
						"name": "DebugRowsReturned",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Set variable",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "@variables('HighWaterMark')",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "DS_Db_Static",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "CopyData",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Set variable",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "@variables('HighWaterMark')",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink"
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_Db_Static",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_Db_Dynamic",
								"type": "DatasetReference",
								"parameters": {
									"SchemaName": "dbo",
									"TableName": "NewCustomerRegistrations"
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"variables": {
					"HighWaterMark": {
						"type": "String"
					}
				},
				"folder": {
					"name": "bidesign"
				},
				"annotations": [],
				"lastPublishTime": "2020-09-23T11:58:27Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PIP_DynamicQueryLogging')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "SetVariable",
						"type": "SetVariable",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"variableName": "HighWaterMark",
							"value": {
								"value": "SELECT * FROM source.CustomerRegistrations WHERE registration_date > '@{adddays(utcnow(), -180)}'",
								"type": "Expression"
							}
						}
					},
					{
						"name": "CopyData",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "CreateEtlLogEntry",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "@variables('HighWaterMark')",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink"
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_Db_Static",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_Db_Dynamic",
								"type": "DatasetReference",
								"parameters": {
									"SchemaName": "dbo",
									"TableName": "NewCustomerRegistrations"
								}
							}
						]
					},
					{
						"name": "CreateEtlLogEntry",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "SetVariable",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderStoredProcedureName": "[[logging].[usp_InsertEtlLog]",
								"storedProcedureParameters": {
									"ComponentName": {
										"type": "String",
										"value": {
											"value": "CopyData",
											"type": "Expression"
										}
									},
									"Deletes": {
										"type": "Int32",
										"value": null
									},
									"DurationSeconds": {
										"type": "Int32",
										"value": null
									},
									"EndTime": {
										"type": "DateTime",
										"value": null
									},
									"ErrorMessage": {
										"type": "String",
										"value": null
									},
									"Inserts": {
										"type": "Int32",
										"value": null
									},
									"PipelineName": {
										"type": "String",
										"value": {
											"value": "@pipeline().Pipeline",
											"type": "Expression"
										}
									},
									"StartTime": {
										"type": "DateTime",
										"value": {
											"value": "@utcnow()",
											"type": "Expression"
										}
									},
									"Updates": {
										"type": "Int32",
										"value": null
									}
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "DS_Db_Static",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": true
						}
					},
					{
						"name": "UpdateEtlLogEntrySuccess",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "CopyData",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[logging].[usp_UpdateEtlLog]",
							"storedProcedureParameters": {
								"Deletes": {
									"value": null,
									"type": "Int32"
								},
								"DurationSeconds": {
									"value": {
										"value": "@activity('CopyData').output.copyDuration",
										"type": "Expression"
									},
									"type": "Int32"
								},
								"EndTime": {
									"value": {
										"value": "@utcnow()",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"ErrorMessage": {
									"value": null,
									"type": "String"
								},
								"EtlLogId": {
									"value": {
										"value": "@activity('CreateEtlLogEntry').output.firstRow.EtlLogId",
										"type": "Expression"
									},
									"type": "Int32"
								},
								"Inserts": {
									"value": {
										"value": "@activity('CopyData').output.rowsCopied",
										"type": "Expression"
									},
									"type": "Int32"
								},
								"Updates": {
									"value": null,
									"type": "Int32"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "lnk_sqldatabase",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "UpdateEtlLogEntryFailure",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "CopyData",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[logging].[usp_UpdateEtlLog]",
							"storedProcedureParameters": {
								"Deletes": {
									"value": null,
									"type": "Int32"
								},
								"DurationSeconds": {
									"value": {
										"value": "@activity('CopyData').output.copyDuration",
										"type": "Expression"
									},
									"type": "Int32"
								},
								"EndTime": {
									"value": {
										"value": "@utcnow()",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"ErrorMessage": {
									"value": {
										"value": "@{activity('CopyData').output.errors[0].Message}",
										"type": "Expression"
									},
									"type": "String"
								},
								"EtlLogId": {
									"value": {
										"value": "@activity('CreateEtlLogEntry').output.firstRow.EtlLogId",
										"type": "Expression"
									},
									"type": "Int32"
								},
								"Inserts": {
									"value": {
										"value": "@activity('CopyData').output.rowsCopied",
										"type": "Expression"
									},
									"type": "Int32"
								},
								"Updates": {
									"value": null,
									"type": "Int32"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "lnk_sqldatabase",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"variables": {
					"HighWaterMark": {
						"type": "String"
					}
				},
				"folder": {
					"name": "bidesign"
				},
				"annotations": [],
				"lastPublishTime": "2020-09-23T15:05:14Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Param Blob To SQL')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy CSV to TBL",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Set variable1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"preCopyScript": {
									"value": "truncate table @{pipeline().parameters.TableName}",
									"type": "Expression"
								},
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "ParamInputCSV",
								"type": "DatasetReference",
								"parameters": {
									"FileName": {
										"value": "@concat(pipeline().parameters.FileName, '.csv')",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "ParamOutputTable",
								"type": "DatasetReference",
								"parameters": {
									"TableName": {
										"value": "@pipeline().parameters.TableName",
										"type": "Expression"
									}
								}
							}
						]
					},
					{
						"name": "Copy TBL to CSV",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "ParamOutputTable",
								"type": "DatasetReference",
								"parameters": {
									"TableName": {
										"value": "@pipeline().parameters.TableName",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "ParamInputCSV",
								"type": "DatasetReference",
								"parameters": {
									"FileName": {
										"value": "@concat(pipeline().parameters.FileName,'-', utcnow(), '.csv')",
										"type": "Expression"
									}
								}
							}
						]
					},
					{
						"name": "Set variable1",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Copy TBL to CSV",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "Temp",
							"value": "123"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"FileName": {
						"type": "string"
					},
					"TableName": {
						"type": "string"
					}
				},
				"variables": {
					"Temp": {
						"type": "String"
					}
				},
				"folder": {
					"name": "zmy00_Misc"
				},
				"annotations": [],
				"lastPublishTime": "2020-09-20T08:29:19Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Trg Pipeline')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "TrgInputCSV",
								"type": "DatasetReference",
								"parameters": {
									"FileName": {
										"value": "@pipeline().parameters.FileName",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "TrgOutputCSV",
								"type": "DatasetReference",
								"parameters": {
									"FileName": {
										"value": "@pipeline().parameters.FileName",
										"type": "Expression"
									}
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"FileName": {
						"type": "string"
					}
				},
				"folder": {
					"name": "zmy00_Misc"
				},
				"annotations": [],
				"lastPublishTime": "2020-09-20T08:29:19Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/cars_view')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "Make",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "Make",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Model",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "Model",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Type",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "Type",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Origin",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "Origin",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "DriveTrain",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "DriveTrain",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Length",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 0,
											"precision": 18
										},
										"sink": {
											"name": "Length",
											"type": "Decimal",
											"physicalType": "Decimal"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_cars_view",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_cars_view_file",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "zmy00_Misc"
				},
				"annotations": [],
				"lastPublishTime": "2020-09-29T18:00:04Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/pip_BulkLoad')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "List Tables",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "select * from ExportedTables;",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "ds_TableList",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "For Each Table",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "List Tables",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('List Tables').output.value",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "Export Table",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "AzureSqlSource",
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"sink": {
											"type": "DelimitedTextSink",
											"storeSettings": {
												"type": "AzureBlobStorageWriteSettings"
											},
											"formatSettings": {
												"type": "DelimitedTextWriteSettings",
												"quoteAllText": true,
												"fileExtension": ".txt"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "ds_SQLTable",
											"type": "DatasetReference",
											"parameters": {
												"pds_TableName": {
													"value": "@item().table_name",
													"type": "Expression"
												},
												"pds_SchemaName": {
													"value": "@item().table_schema",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "ds_ExportedData",
											"type": "DatasetReference",
											"parameters": {
												"pds_FileName": {
													"value": "@concat(item().table_schema, '_', item().table_name, '.csv')",
													"type": "Expression"
												}
											}
										}
									]
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "zmy00_Misc"
				},
				"annotations": [],
				"lastPublishTime": "2020-09-20T08:29:19Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/pip_Email')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy Cars",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFileName": "cars.csv"
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "ds_EmailGeneric",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "ds_EmailOutput",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Copy Planes",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Copy Cars",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFileName": "planes.csv"
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "ds_EmailGeneric",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "ds_EmailOutput",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Copy Movies",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Copy Planes",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFileName": "movies.csv"
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "ds_EmailGeneric",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "ds_EmailOutput",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "zmy00_Misc"
				},
				"annotations": [],
				"lastPublishTime": "2020-09-20T08:29:19Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/pip_FactScorePipeline')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "select a.TeamKey, b.* from zmy01_stg_score b\njoin zmy01_dim_team a\non a.TeamCode = b.TeamCode\nand b.LastUpdateDate >= a.DWEffectiveStartDate\nand b.LastUpdateDate < a.DWEffectiveEndDate",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink"
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "ds_stgScore",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "ds_factScore",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "zmy01_IncLoad_SCD"
				},
				"annotations": [],
				"lastPublishTime": "2020-09-20T12:13:21Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/pip_IncrementalLoad')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "CFG table:\n\n-- TableName: table name to be loaded\n-- NaturalKey: for dim tables to de-duplicate records with same natural key and only leave latest record; for all other tables leave \"na\" (not any)  \n-- Source: could be region, lob, application, crm, erp, ... (entered through pipeline parameter)\n-- MaxLastUpdateDate: table last updated date \n-- Enabled: 1 - load, 0 - do not load\n-- LoadType: 1 - incremental, 0 - full",
				"activities": [
					{
						"name": "Enabled",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "select * from zmy01_stg_cfg where Enabled = 1",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "ds_stg",
								"type": "DatasetReference",
								"parameters": {
									"TableName": "dummy"
								}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "Filter source",
						"type": "Filter",
						"dependsOn": [
							{
								"activity": "Enabled",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Enabled').output.value",
								"type": "Expression"
							},
							"condition": {
								"value": "@equals(item().source, pipeline().parameters.Source)",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Source iteration",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Filter source",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Filter source').output.value",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "Inc - Full condition",
									"type": "IfCondition",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"expression": {
											"value": "@bool(equals(item().LoadType, 1))",
											"type": "Expression"
										},
										"ifFalseActivities": [
											{
												"name": "Full",
												"type": "Copy",
												"dependsOn": [],
												"policy": {
													"timeout": "7.00:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"source": {
														"type": "AzureSqlSource",
														"sqlReaderQuery": {
															"value": "select * from @{item().TableName}",
															"type": "Expression"
														},
														"queryTimeout": "02:00:00",
														"partitionOption": "None"
													},
													"sink": {
														"type": "AzureSqlSink",
														"preCopyScript": {
															"value": "truncate table @{replace(item().TableName, 'src', 'stg')}",
															"type": "Expression"
														},
														"disableMetricsCollection": false
													},
													"enableStaging": false,
													"translator": {
														"type": "TabularTranslator",
														"typeConversion": true,
														"typeConversionSettings": {
															"allowDataTruncation": true,
															"treatBooleanAsNumber": false
														}
													}
												},
												"inputs": [
													{
														"referenceName": "ds_src",
														"type": "DatasetReference",
														"parameters": {}
													}
												],
												"outputs": [
													{
														"referenceName": "ds_stg",
														"type": "DatasetReference",
														"parameters": {
															"TableName": {
																"value": "@replace(item().TableName, 'src', 'stg')",
																"type": "Expression"
															}
														}
													}
												]
											}
										],
										"ifTrueActivities": [
											{
												"name": "Get max last update date from CFG",
												"type": "Lookup",
												"dependsOn": [],
												"policy": {
													"timeout": "7.00:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"source": {
														"type": "AzureSqlSource",
														"sqlReaderQuery": {
															"value": "select MaxLastUpdateDate from zmy01_stg_cfg where TableName like '@{item().TableName}'",
															"type": "Expression"
														},
														"queryTimeout": "02:00:00",
														"partitionOption": "None"
													},
													"dataset": {
														"referenceName": "ds_stg",
														"type": "DatasetReference",
														"parameters": {
															"TableName": "dummy"
														}
													}
												}
											},
											{
												"name": "Incremental",
												"type": "Copy",
												"dependsOn": [
													{
														"activity": "Get max last update date from CFG",
														"dependencyConditions": [
															"Succeeded"
														]
													}
												],
												"policy": {
													"timeout": "7.00:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"source": {
														"type": "AzureSqlSource",
														"sqlReaderQuery": {
															"value": "select * from @{item().TableName} \nwhere \nconvert(varchar(max), LastUpdateDate, 120) > \nconvert(varchar(max), substring(replace('@{activity('Get max last update date from CFG').output.firstRow.MaxLastUpdateDate}', 'T', ' '), 0, 20), 120)\n",
															"type": "Expression"
														},
														"queryTimeout": "02:00:00",
														"partitionOption": "None"
													},
													"sink": {
														"type": "AzureSqlSink"
													},
													"enableStaging": false,
													"translator": {
														"type": "TabularTranslator",
														"typeConversion": true,
														"typeConversionSettings": {
															"allowDataTruncation": true,
															"treatBooleanAsNumber": false
														}
													}
												},
												"inputs": [
													{
														"referenceName": "ds_src",
														"type": "DatasetReference",
														"parameters": {}
													}
												],
												"outputs": [
													{
														"referenceName": "ds_stg",
														"type": "DatasetReference",
														"parameters": {
															"TableName": {
																"value": "@replace(item().TableName, 'src', 'stg')",
																"type": "Expression"
															}
														}
													}
												]
											}
										]
									}
								},
								{
									"name": "Get max last update date from STG",
									"type": "Lookup",
									"dependsOn": [
										{
											"activity": "Dedup dim",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "AzureSqlSource",
											"sqlReaderQuery": {
												"value": "select max(LastUpdateDate) as maxD from @{replace(item().TableName, 'src', 'stg')}",
												"type": "Expression"
											},
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"dataset": {
											"referenceName": "ds_stg",
											"type": "DatasetReference",
											"parameters": {
												"TableName": "dummy"
											}
										}
									}
								},
								{
									"name": "Update max last update date in CFG",
									"type": "Lookup",
									"dependsOn": [
										{
											"activity": "Get max last update date from STG",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "AzureSqlSource",
											"sqlReaderQuery": {
												"value": "update zmy01_stg_cfg \nset MaxLastUpdateDate = '@{activity('Get max last update date from STG').output.firstRow.maxD}'\nwhere TableName like '@{item().TableName}'\n\nselect '1'",
												"type": "Expression"
											},
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"dataset": {
											"referenceName": "ds_stg",
											"type": "DatasetReference",
											"parameters": {
												"TableName": "dummy"
											}
										}
									}
								},
								{
									"name": "Dedup dim",
									"type": "IfCondition",
									"dependsOn": [
										{
											"activity": "Inc - Full condition",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"expression": {
											"value": "@bool(equals(item().NaturalKey, 'na'))",
											"type": "Expression"
										},
										"ifFalseActivities": [
											{
												"name": "Delete dup records",
												"type": "Lookup",
												"dependsOn": [],
												"policy": {
													"timeout": "7.00:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"source": {
														"type": "AzureSqlSource",
														"sqlReaderQuery": {
															"value": "delete dup\nfrom\n(\n select row_number() over (partition by @{item().NaturalKey} order by LastUpdateDate desc) as val\n from @{replace(item().TableName, 'src', 'stg')}\n) dup\nwhere dup.val > 1\n\nselect '1'",
															"type": "Expression"
														},
														"queryTimeout": "02:00:00",
														"partitionOption": "None"
													},
													"dataset": {
														"referenceName": "ds_stg",
														"type": "DatasetReference",
														"parameters": {
															"TableName": "dummy"
														}
													}
												}
											}
										]
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"Source": {
						"type": "string",
						"defaultValue": "UK"
					}
				},
				"folder": {
					"name": "zmy01_IncLoad_SCD"
				},
				"annotations": [],
				"lastPublishTime": "2020-09-17T10:38:32Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/pip_excel_01')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "ExcelSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "ds_Excel",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "ds_Excel_output",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "zmy00_Misc"
				},
				"annotations": [],
				"lastPublishTime": "2020-09-20T08:29:19Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/sftp to blob')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "BinarySource",
								"storeSettings": {
									"type": "SftpReadSettings",
									"recursive": true
								},
								"formatSettings": {
									"type": "BinaryReadSettings"
								}
							},
							"sink": {
								"type": "BinarySink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "ds_sftp",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "ds_blob1",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "testcreditsafe"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/test1_1_zip')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "test1_1_ZipToUnzip",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "BinarySource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": false,
									"deleteFilesAfterCompletion": false
								},
								"formatSettings": {
									"type": "BinaryReadSettings",
									"compressionProperties": {
										"type": "ZipDeflateReadSettings",
										"preserveZipFileNameAsFolder": false
									}
								}
							},
							"sink": {
								"type": "BinarySink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "test1_1_SourceDataset",
								"type": "DatasetReference",
								"parameters": {
									"SourceFileName": {
										"value": "@concat(pipeline().parameters.PipeFileName, '.zip')",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "test1_1_DestinationDataset",
								"type": "DatasetReference",
								"parameters": {
									"DestinationFileName": {
										"value": "@concat(pipeline().parameters.PipeFileName, '.txt')",
										"type": "Expression"
									}
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"PipeFileName": {
						"type": "string"
					}
				},
				"folder": {
					"name": "zmy02_CDR"
				},
				"annotations": [],
				"lastPublishTime": "2020-10-02T06:26:29Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/test1_zip')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "test1_ZipToUnzip",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [
							{
								"name": "Source",
								"value": "zmy02-zipped//demo1.zip"
							},
							{
								"name": "Destination",
								"value": "zmy02-unzipped//"
							}
						],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings",
									"skipLineCount": 0,
									"compressionProperties": {
										"type": "ZipDeflateReadSettings",
										"preserveZipFileNameAsFolder": false
									}
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"validateDataConsistency": false
						},
						"inputs": [
							{
								"referenceName": "test1_SourceDataset",
								"type": "DatasetReference",
								"parameters": {
									"SourceFileName": {
										"value": "@concat(pipeline().parameters.PipeFileName, '.zip')",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "test1_DestinationDataset",
								"type": "DatasetReference",
								"parameters": {
									"DestinationFileName": {
										"value": "@concat(pipeline().parameters.PipeFileName, '.txt')",
										"type": "Expression"
									}
								}
							}
						]
					},
					{
						"name": "test1_LoadFinalTable",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "test1_ZipToUnzip",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"additionalColumns": [
									{
										"name": "PIPELINERUNID",
										"value": {
											"value": "@pipeline().RunId",
											"type": "Expression"
										}
									}
								],
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink"
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "ICAO",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Icao",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "IATA",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Iata",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "MAKER",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Maker",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "DESCRIPTION",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Descr",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "PIPELINERUNID",
											"type": "String"
										},
										"sink": {
											"name": "PipelineRunId",
											"physicalType": "varchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "test1_DestinationDataset",
								"type": "DatasetReference",
								"parameters": {
									"DestinationFileName": {
										"value": "@concat(pipeline().parameters.PipeFileName, '.txt')",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "test1_FinalTableDataset",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "test1_LoadLogTable",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "test1_ZipToUnzip",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[cdr].[usp_LoadLogTable]",
							"storedProcedureParameters": {
								"PipelineRunId": {
									"value": {
										"value": "@pipeline().RunId",
										"type": "Expression"
									},
									"type": "String"
								},
								"PipelineTriggerTime": {
									"value": {
										"value": "@pipeline().TriggerTime",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"SourceFileName": {
									"value": {
										"value": "@pipeline().parameters.PipeFileName",
										"type": "Expression"
									},
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "lnk_sqldatabase",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"PipeFileName": {
						"type": "string"
					}
				},
				"folder": {
					"name": "zmy02_CDR"
				},
				"annotations": [],
				"lastPublishTime": "2020-10-02T11:22:22Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/test_restapi')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data from REST API to BLOB",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "RestSource",
								"httpRequestTimeout": "00:01:40",
								"requestInterval": "00.00:00:00.010",
								"requestMethod": "GET"
							},
							"sink": {
								"type": "JsonSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "JsonWriteSettings"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "test_restapi_source",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "test_restapi_blob_json",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Lookup JSON",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Copy data from REST API to BLOB",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "JsonSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true
								},
								"formatSettings": {
									"type": "JsonReadSettings"
								}
							},
							"dataset": {
								"referenceName": "test_restapi_blob_json",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "Copy data JSON to SQLDB",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Copy data from REST API to BLOB",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "JsonSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true
								},
								"formatSettings": {
									"type": "JsonReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink"
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"path": "[['id']"
										},
										"sink": {
											"name": "id",
											"type": "Int32"
										}
									},
									{
										"source": {
											"path": "[['employee_name']"
										},
										"sink": {
											"name": "employee_name",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['employee_salary']"
										},
										"sink": {
											"name": "employee_salary",
											"type": "Int32"
										}
									},
									{
										"source": {
											"path": "[['employee_age']"
										},
										"sink": {
											"name": "employee_age",
											"type": "Int32"
										}
									},
									{
										"source": {
											"path": "[['profile_image']"
										},
										"sink": {
											"name": "profile_image",
											"type": "String"
										}
									}
								],
								"collectionReference": "$['data']"
							}
						},
						"inputs": [
							{
								"referenceName": "test_restapi_blob_json",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "test_restapi_sqldb",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "zmy02_CDR"
				},
				"annotations": [],
				"lastPublishTime": "2020-10-02T15:53:41Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/test_restapi2')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "RESTAPI to SQLDB",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "RestSource",
								"httpRequestTimeout": "00:01:40",
								"requestInterval": "00.00:00:00.010",
								"requestMethod": "GET"
							},
							"sink": {
								"type": "AzureSqlSink"
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"path": "[['id']"
										},
										"sink": {
											"name": "id",
											"type": "Int32"
										}
									},
									{
										"source": {
											"path": "[['employee_name']"
										},
										"sink": {
											"name": "employee_name",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['employee_salary']"
										},
										"sink": {
											"name": "employee_salary",
											"type": "Int32"
										}
									},
									{
										"source": {
											"path": "[['employee_age']"
										},
										"sink": {
											"name": "employee_age",
											"type": "Int32"
										}
									},
									{
										"source": {
											"path": "[['profile_image']"
										},
										"sink": {
											"name": "profile_image",
											"type": "String"
										}
									}
								],
								"collectionReference": "$['data']"
							}
						},
						"inputs": [
							{
								"referenceName": "test_restapi_source",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "test_restapi_sqldb",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "zmy02_CDR"
				},
				"annotations": [],
				"lastPublishTime": "2020-10-02T15:57:20Z"
			},
			"dependsOn": []
		}
	]
}